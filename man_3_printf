.TH _PRINTF 1 "30 July 2018" "1.0" "_printf man page"
.SH NAME
.B _printf
- formatted output conversion
.SH SYNOPSIS
#include "holberton.h"

int _printf(const char *format, ...);

.SH DESCRIPTION
The function _printf() produces output according to a format as described below.

.B Return value

Upon successful return, the function returns the number of characters printed (excluding the null byte used to end output to strings).

If an output error is encountered, a negative value is returned.

If there is an unpaired '%', then display everything to the null terminator and return display count (does not matter: '%' '\0').

If no unpaired '%', except for the '%' '\0' at the end, then print everything except the last '%' and return (-1).

.B Format of the format string

The format string is a character string and is composed of zero or more directives:
1) ordinary characters (not %), which are copied unchanged to the output stream
2) conversion specifications, each of which results in fetching zero or more subsequent arguments.

Each conversion specification is introduced by the character %, and ends with a conversion specifier.

.B The conversion specifier

A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:

.B d, i
The int argument is converted to signed decimal notation.

.B c
The int argument is converted to an unsigned char, and the resulting character is written.

.B s
The const char *argunment is expected to be a pointer to an array of character type (pointer to a string).

.B %
A '%' is written. No argument is converted. The complete conversion specification is '%%'.
.SH OPTIONS
.B _printf
does not take any options. However, you can supply conversion specifier.
.SH SEE ALSO
.I printf(3), scanf(3), write(2)
.SH BUGS
No known bugs.
.SH AUTHOR
Sumin Yu and Wendy Leung